#!/usr/bin/env bash
#
# Print battery status indicator - i.e:  90%.
# Intended to be used by status bars such as slstatus.
#
# Author: Mathias Estrup

set -euo pipefail

readonly CHARGING_ICON=""
readonly CAPACITY_ICONS=(          )

# Use absolute paths to avoid environt variable attacks
alias echo=/usr/bin/echo
alias cat=/usr/bin/cat

function main() {
    if [ "$#" -ne 1 ]; then
        echo Usage: ./getbattery.sh BATTERY_NAME >&2
        return 1
    fi

    local battery_name=$1

    # TODO: Input validation/sanitization of battery_name

    local path="/sys/class/power_supply/$battery_name"

    # TODO: Validate that path exists and is a directory

    local status
    status=$(cat "$path/status")

    # TODO: Input validation/sanitization of status

    local capacity
    capacity=$(cat "$path/capacity")

    # TODO: Input validation/sanitization of capacity (i.e. 0 <= capacity <= 100)

    local icon
    icon=$(get_icon "$status" "$capacity")

    # TODO: Validate icon

    echo "$icon $capacity%"
    return 0
}

################################################################################
# Get an appropriate battery icon for a given status and capacity.
# Does NOT validate/sanitize arguments and as such, they should be
# validated/sanitized before calling this function.
# Globals:
#   CHARGING_ICON
#   CAPACITY_ICONS
# Arguments:
#   Battery status - i.e. "Charging"/"Not charging"/"Full".
#   Battery capacity percentage.
# Outputs:
#   Writes battery icon to stdout.
################################################################################
function get_icon() {
    local status=$1
    local capacity=$2

    if [ "$status" == "Charging" ]; then
        echo "$CHARGING_ICON"
        return 0
    fi

    local index=$(( "$capacity" / 10 ))
    local icon="${CAPACITY_ICONS[$index]}"

    echo "$icon"
    return 0
}

main "$@"
